{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nexport const fetchSuggestion = createAsyncThunk(\n/* Task 15: Complete the `createAsyncThunk()` function to load a suggestion from this URL: http://localhost:3004/api/suggestion */\n\"suggestion/fetchSuggestion\", async () => {\n  const response = await fetch(\"http://localhost:3004/api/suggestion\");\n  const data = await response.json();\n  return data;\n});\nconst initialState = {\n  suggestion: \"\",\n  loading: false,\n  error: false\n};\nconst options = {\n  name: \"suggestion\",\n  initialState,\n  reducers: {},\n  extraReducers: {\n    /* Task 16: Inside `extraReducers`, add reducers to handle all three promise lifecycle states - pending, fulfilled, and rejected - for the `fetchSuggestion()` call */\n    [fetchSuggestion.pending]: state => {\n      state.loading = true;\n      state.error = false;\n    },\n    [fetchSuggestion.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.error = false;\n      state.suggestion = action.payload;\n    },\n    [fetchSuggestion.rejected]: state => {\n      state.loading = false;\n      state.error = true;\n    }\n  }\n};\nconst suggestionSlice = createSlice(options);\nexport default suggestionSlice.reducer; // Task 17: Create a selector, called `selectSuggestion`, for the `suggestion` state variable and export it from the file\n\nexport const selectSuggestion = state => state.suggestion.suggestion;\nexport const selectLoading = state => state.suggestion.loading;\nexport const selectError = state => state.suggestion.error;","map":{"version":3,"names":["createAsyncThunk","createSlice","fetchSuggestion","response","fetch","data","json","initialState","suggestion","loading","error","options","name","reducers","extraReducers","pending","state","fulfilled","action","payload","rejected","suggestionSlice","reducer","selectSuggestion","selectLoading","selectError"],"sources":["/Users/elkhalifa/Desktop/redux-assessment/src/features/suggestion/suggestion.slice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\nexport const fetchSuggestion = createAsyncThunk(\n  /* Task 15: Complete the `createAsyncThunk()` function to load a suggestion from this URL: http://localhost:3004/api/suggestion */\n\n  \"suggestion/fetchSuggestion\",\n  async () => {\n    const response = await fetch(\"http://localhost:3004/api/suggestion\");\n    const data = await response.json();\n    return data;\n  }\n);\n\nconst initialState = {\n  suggestion: \"\",\n  loading: false,\n  error: false,\n};\n\nconst options = {\n  name: \"suggestion\",\n  initialState,\n  reducers: {},\n  extraReducers: {\n    /* Task 16: Inside `extraReducers`, add reducers to handle all three promise lifecycle states - pending, fulfilled, and rejected - for the `fetchSuggestion()` call */\n\n    [fetchSuggestion.pending]: (state) => {\n      state.loading = true;\n      state.error = false;\n    },\n    [fetchSuggestion.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.error = false;\n      state.suggestion = action.payload;\n    },\n    [fetchSuggestion.rejected]: (state) => {\n      state.loading = false;\n      state.error = true;\n    },\n  },\n};\n\nconst suggestionSlice = createSlice(options);\n\nexport default suggestionSlice.reducer;\n\n// Task 17: Create a selector, called `selectSuggestion`, for the `suggestion` state variable and export it from the file\nexport const selectSuggestion = (state) => state.suggestion.suggestion;\n\nexport const selectLoading = (state) => state.suggestion.loading;\nexport const selectError = (state) => state.suggestion.error;\n"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AAEA,OAAO,MAAMC,eAAe,GAAGF,gBAAgB;AAC7C;AAEA,4BAH6C,EAI7C,YAAY;EACV,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAD,CAA5B;EACA,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;EACA,OAAOD,IAAP;AACD,CAR4C,CAAxC;AAWP,MAAME,YAAY,GAAG;EACnBC,UAAU,EAAE,EADO;EAEnBC,OAAO,EAAE,KAFU;EAGnBC,KAAK,EAAE;AAHY,CAArB;AAMA,MAAMC,OAAO,GAAG;EACdC,IAAI,EAAE,YADQ;EAEdL,YAFc;EAGdM,QAAQ,EAAE,EAHI;EAIdC,aAAa,EAAE;IACb;IAEA,CAACZ,eAAe,CAACa,OAAjB,GAA4BC,KAAD,IAAW;MACpCA,KAAK,CAACP,OAAN,GAAgB,IAAhB;MACAO,KAAK,CAACN,KAAN,GAAc,KAAd;IACD,CANY;IAOb,CAACR,eAAe,CAACe,SAAjB,GAA6B,CAACD,KAAD,EAAQE,MAAR,KAAmB;MAC9CF,KAAK,CAACP,OAAN,GAAgB,KAAhB;MACAO,KAAK,CAACN,KAAN,GAAc,KAAd;MACAM,KAAK,CAACR,UAAN,GAAmBU,MAAM,CAACC,OAA1B;IACD,CAXY;IAYb,CAACjB,eAAe,CAACkB,QAAjB,GAA6BJ,KAAD,IAAW;MACrCA,KAAK,CAACP,OAAN,GAAgB,KAAhB;MACAO,KAAK,CAACN,KAAN,GAAc,IAAd;IACD;EAfY;AAJD,CAAhB;AAuBA,MAAMW,eAAe,GAAGpB,WAAW,CAACU,OAAD,CAAnC;AAEA,eAAeU,eAAe,CAACC,OAA/B,C,CAEA;;AACA,OAAO,MAAMC,gBAAgB,GAAIP,KAAD,IAAWA,KAAK,CAACR,UAAN,CAAiBA,UAArD;AAEP,OAAO,MAAMgB,aAAa,GAAIR,KAAD,IAAWA,KAAK,CAACR,UAAN,CAAiBC,OAAlD;AACP,OAAO,MAAMgB,WAAW,GAAIT,KAAD,IAAWA,KAAK,CAACR,UAAN,CAAiBE,KAAhD"},"metadata":{},"sourceType":"module"}